% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SSjags1.R
\name{runSS}
\alias{runSS}
\title{Construct and Run a State-Space Model}
\usage{
runSS(
  y,
  x = NULL,
  runmodel = T,
  niter = 2000,
  ncores = NULL,
  parallel = TRUE,
  outlength = 1000,
  stochasticPeriods = NULL,
  deterministicPeriods = NULL,
  AR1 = FALSE,
  sig_eps_prior = "dexp(0.2)",
  sig_xi_prior = "dexp(0.2)",
  sig_omega_prior = "dexp(0.2)",
  phi_prior = "dunif(0,1)",
  sigeps_breaks = NULL
)
}
\arguments{
\item{y}{The input time series, expressed as a numeric vector.}

\item{x}{The corresponding time measurements, expressed as a numeric vector.
If the default \code{NULL} is used, the time measurements will be assumed to be
equally-spaced integer values.}

\item{runmodel}{Whether to run the model in JAGS.  If \code{FALSE}, the function will
instead print the model in JAGS syntax to the console, providing a check to
validate that the model is constructed as intended.  Defaults to \code{TRUE}.}

\item{niter}{The number of MCMC iterations to run  Defaults to \code{2000}, which will
almost certainly not be enough to achieve convergence! However, this default value
will serve as a starting point for the user to test model performance and alter
the number of iterations as necessary.}

\item{ncores}{The number of CPU cores to use, assuming MCMC chains are run in
parallel.  If the default \code{NULL} is accepted, \code{parallel::detectCores} will attempt
to detect the number of available CPU cores, and the function will use the number
of available cores minus one.}

\item{parallel}{Whether to run chains in parallel, which should save considerable
processing time.  Defaults to \code{TRUE}.}

\item{outlength}{Desired number of MCMC iterations to save in output.  The function
will automatically thin the output to the desired length.  Defaults to \code{1000}.}

\item{stochasticPeriods}{An optional vector of stochastic cycle periods, in
units of time.  Defaults to \code{NULL}, indicating no stochastic cycle present.}

\item{deterministicPeriods}{An optional vector of deterministic cycle periods, in
units of time.  Defaults to \code{NULL}, indicating no deterministic cycle present.}

\item{AR1}{Whether to include autocorrelation (red noise) in the irregular term.
Defaults to \code{FALSE}.}

\item{sig_eps_prior}{The prior used for the IRREGULAR standard deviation(s),
expressed in JAGS syntax.  Note that providing a number here will set this value
to a constant, instead of treating it as a modeled quantity.  Defaults to \code{"dexp(0.2)"}}

\item{sig_xi_prior}{The prior used for the RATE DISTURBANCE standard deviation(s),
expressed in JAGS syntax.  Note that providing a number here will set this value
to a constant, instead of treating it as a modeled quantity.  Defaults to \code{"dexp(0.2)"}}

\item{sig_omega_prior}{The prior used for the CYCLIC DISTURBANCE standard deviation(s),
expressed in JAGS syntax.  Note that providing a number here will set this value
to a constant, instead of treating it as a modeled quantity.  Note that this argument
will be ignored if \code{stochasticPeriods} is set to \code{NULL}.  Defaults to \code{"dexp(0.2)"}}

\item{phi_prior}{The prior used for the AR(1) autoregressive parameter,
expressed in JAGS syntax.  Note that providing a number here will set this value
to a constant, instead of treating it as a modeled quantity.  Note that this argument
will be ignored if \code{AR1==FALSE}.  Defaults to \code{"dunif(0,1)"}}

\item{sigeps_breaks}{An optional vector of structural breakpoints in the irregular
component, which may be interpreted as different irregular standard deviations
in different time periods.  Defaults to \code{NULL}, indicating no breaks.}
}
\description{
Automatically constructs and optionally runs a State-Space time series
model, given an input time series and optional model components.

This is a wrapper function, which constructs a model using the JAGS syntax according
to model arguments provided by the user.  This is written to a temporary text file,
which is called by JAGS using \code{jagsUI::jags()}.

THIS IS WHERE I SHOULD TALK A LOT ABOUT THE MODEL FORMULATION!!
}
\note{
DO I WANT A NOTE HERE??
}
\examples{
## FILL THIS IN .... maybe try something like try(detectCores) at the appropriate spot
}
\author{
Matt Tyers
}
